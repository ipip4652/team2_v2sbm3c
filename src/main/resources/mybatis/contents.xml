<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="dev.mvc.contents.ContentsDAOInter"> 
<!--   <insert id="create" parameterType="dev.mvc.contents.ContentsVO">
    INSERT INTO contents(contentsno, memberno, cateno, pname, content, word,
                                     file1, file1saved, thumb1, size1, rdate)
    VALUES(contents_seq.nextval, #{memberno}, #{cateno}, #{pname}, #{content},  #{word},
                #{file1}, #{file1saved}, #{thumb1}, #{size1}, sysdate)
  </insert> -->

  <!-- 연속 입력 지원 등록: sequence가 SQL 실행전에 생성되어 ContentsVO에 저장 후 사용 -->
  <insert id="create" parameterType="dev.mvc.contents.ContentsVO">
    <selectKey keyProperty="contentsno" resultType="int" order="BEFORE">
      SELECT contents_seq.nextval FROM dual
    </selectKey> <!--시퀀스 변경??(일단 db상에 있는 이름으로 지정함) -->
    
    INSERT INTO contents(contentsno, memberno, cateno, pcompany, pname, pcontent, price, word,
                                     file1, file1saved, thumb1, size1, rdate)
    VALUES(#{contentsno}, #{memberno}, #{cateno}, #{pcompany}, #{pname}, #{pcontent}, #{price}, #{word},
                #{file1}, #{file1saved}, #{thumb1}, #{size1}, sysdate)
  </insert>
  
  <!-- 일반적인 조회 -->
  <select id="read" resultType="dev.mvc.contents.ContentsVO" parameterType="int">
    SELECT contentsno, memberno, cateno, pcompany, pname, pcontent, cnt, word, rdate,
              file1, file1saved, thumb1, size1, price, salecnt
    FROM contents
    WHERE contentsno = #{contentsno}
  </select>
  
  <!-- 상품 정보 변경 -->
  <update id="product_update" parameterType="dev.mvc.contents.ContentsVO">
    UPDATE contents
    SET price=#{price}, salecnt=#{salecnt}
    WHERE contentsno = #{contentsno}
  </update> 
  
  <!-- 특정 카테고리의 등록된 글목록 -->
  <select id="list_by_cateno" resultType="dev.mvc.contents.ContentsVO" parameterType="int">
    SELECT contentsno, memberno, cateno, pcompany, pname, pcontent, cnt, rdate,
              file1, file1saved, thumb1, size1, price
    FROM contents 
    WHERE cateno = #{cateno}
    ORDER BY contentsno DESC
  </select>   

  <!-- 카테고리별 검색 목록 -->
  <select id="list_by_cateno_search" resultType="dev.mvc.contents.ContentsVO" 
             parameterType="HashMap">
    SELECT contentsno, memberno, cateno, pcompany, pname, pcontent, recom, cnt, rdate,
            file1, file1saved, thumb1, size1, price
    FROM contents
    <choose>
      <when test="word == null or word == ''"> <!-- 검색하지 않는 경우 -->
        WHERE cateno=#{cateno}
      </when>
      <otherwise> <!-- 검색하는 경우 -->
        WHERE cateno=#{cateno} AND (UPPER(pname) LIKE '%' || #{word} || '%' 
                                                     OR UPPER(pcontent) LIKE '%' || #{word} || '%' 
                                                     OR UPPER(word) LIKE '%' || #{word} || '%')
      </otherwise>
    </choose>
    ORDER BY contentsno DESC   
  </select>
   
  <!-- 카테고리별 검색 레코드 갯수 -->
  <select id="search_count" resultType="int" parameterType="HashMap">
    SELECT COUNT(*) as cnt
    FROM contents
    <choose>
      <when test="word == null or word == ''"> <!-- 검색하지 않는 경우의 레코드 갯수 -->
        WHERE cateno=#{cateno}
      </when>
      <otherwise> <!-- 검색하는 경우의 레코드 갯수 -->
        WHERE cateno=#{cateno} AND (UPPER(pname) LIKE '%' || #{word} || '%' 
                                                     OR UPPER(pcontent) LIKE '%' || #{word} || '%' 
                                                     OR UPPER(word) LIKE '%' || #{word} || '%')
      </otherwise>
    </choose>
  </select>    

  <!-- 카테고리별 검색 목록 + 페이징 + 메인 이미지 -->   
  <select id="list_by_cateno_search_paging" 
             resultType="dev.mvc.contents.ContentsVO" parameterType="HashMap">
   SELECT contentsno, memberno, cateno, pcompany, pname, pcontent, cnt, rdate, word,
              file1, file1saved, thumb1, size1, price, r
   FROM (
              SELECT contentsno, memberno, cateno, pcompany, pname, pcontent, cnt, rdate, word,
                         file1, file1saved, thumb1, size1, price, rownum as r
              FROM (
                        SELECT contentsno, memberno, cateno, pcompany, pname, pcontent, cnt, rdate, word,
                                   file1, file1saved, thumb1, size1, price
                        FROM contents
                        <choose>
                          <when test="word == null or word == ''"> <!-- 검색하지 않는 경우 -->
                             WHERE cateno=#{cateno}
                          </when>
                          <otherwise>
                            WHERE cateno=#{cateno} AND (UPPER(pname) LIKE '%' || #{word} || '%' 
                                                                  OR UPPER(pcontent) LIKE '%' || #{word} || '%' 
                                                                  OR UPPER(word) LIKE '%' || #{word} || '%')
                          </otherwise>
                        </choose>
                        ORDER BY contentsno DESC
               )
    )
    WHERE <![CDATA[ r >= #{start_num} AND r <= #{end_num} ]]>
     
    <!--  1 page: WHERE r >= 1 AND r <= 10; 
            2 page: WHERE r >= 11 AND r <= 20;
            3 page: WHERE r >= 21 AND r <= 30; -->
     
  </select>   
  
  <!-- 패스워드 검사 -->
  <!--   <select id="sex_check" resultType="int" parameterType="HashMap">
    SELECT COUNT(*) as cnt 
    FROM contents
    WHERE contentsno=#{contentsno} AND sex=#{sex}
  </select> -->


  <!-- 텍스트 수정 -->
  <update id="update_text" parameterType="dev.mvc.contents.ContentsVO">
    UPDATE contents
    SET pcompany =#{pcompany}, pname=#{pname}, pcontent=#{pcontent},  word=#{word}, 
          price=#{price}, salecnt=#{salecnt}
    WHERE contentsno = #{contentsno}
  </update>

  <!-- 파일 수정 -->
  <update id="update_file" parameterType="dev.mvc.contents.ContentsVO">
    UPDATE contents
    SET file1=#{file1}, file1saved=#{file1saved}, thumb1=#{thumb1}, size1=#{size1}
    WHERE contentsno = #{contentsno}
  </update>
  
  <delete id="delete" parameterType="int">
    DELETE FROM contents
    WHERE contentsno=#{contentsno}
  </delete>
  
  <!-- 특정 카테고리에 속한 레코드 갯수 산출 -->
  <select id="count_by_cateno" resultType="int" parameterType="int">
    SELECT COUNT(*) as cnt
    FROM contents
    WHERE cateno=#{cateno}
  </select>
  
  <select id="search_by_word" resultType="dev.mvc.contents.ContentsVO" parameterType="String">
    SELECT contentsno, memberno, cnt, rdate
    FROM contents
    WHERE word=#{word}
  </select>
</mapper> 
